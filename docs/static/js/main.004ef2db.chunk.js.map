{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OACI,sBAAMC,SAZW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAK,GAAC,OAAKH,GAAL,mBAAmBG,OAClCF,EAAc,MAMlB,SAEI,uBAAOM,KAAK,OAAOC,MAAOR,EAAYS,SAnBpB,SAACN,GAEvBF,EAAcE,EAAEO,OAAOF,a,+BCVlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,8DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGlC,OACI,sBAAKc,UAAU,2BAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZb,mBAAS,CAE3BoB,KAAM,GACNa,SAAQ,IALsB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAwBtC,OAfAC,qBAAU,WAENxB,EAAQC,GAAUwB,MAAK,SAAAC,GAGfH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAMtB,CAACpB,IAEIqB,EDpBwBK,CAAa1B,GAAhCa,EAHuB,EAG5BN,KAAaa,EAHe,EAGfA,QAEpB,OACI,qCACE,6BAAKpB,IAENoB,GAAW,mBAAGJ,UAAU,iBAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEaH,EAAOJ,KAAI,SAAAgB,GAAI,OAEd,cAAC,EAAD,eAA+BA,GAAbA,EAAKd,aEfhCgB,EAAe,WAAO,IAAD,EAGMxC,mBAAS,CAAC,WAHhB,mBAGvByC,EAHuB,KAGX1C,EAHW,KAM9B,OACI,gCACQ,4CAER,cAAC,EAAD,CAAaA,cAAeA,IAExB,uBAIA,6BAEQ0C,EAAWnB,KAAI,SAAAT,GACX,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MChB7C6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,SAM1B,a","file":"static/js/main.004ef2db.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n       \r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) =>{\r\n\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(e => [inputValue,...e]);\r\n            setInputValue('');\r\n            \r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n        \r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange}/>\r\n        </form>\r\n    )\r\n\r\n}\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=8&api_key=TYK4QpHPVVMsOqRYIwOePlI6sh1nhe4l`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    /* console.log(id,title); */\r\n    return (\r\n        <div className=\"card animate__fadeInDown\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n          <h3>{category}</h3>  \r\n\r\n        {loading && <p className=\"animate__flash\">Loading</p>}\r\n           \r\n        <div className=\"card-grid\">\r\n                \r\n                    {images.map(imgs => \r\n\r\n                      <GifGridItem key={imgs.id} {...imgs}/>\r\n\r\n                            \r\n                    )}\r\n                \r\n    \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        \r\n            data: [],\r\n            loading:true\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category).then(imgs=>{\r\n\r\n            \r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n\r\n            \r\n        })\r\n\r\n    },[category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['naruto']);\r\n\r\n\r\n    return (\r\n        <div>\r\n                <h2>Hola Mundo</h2>\r\n\r\n        <AddCategory setCategories={setCategories}/>\r\n\r\n            <hr/>\r\n\r\n        \r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => {\r\n                        return <GifGrid key={category} category={category}/>\r\n                    })\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n//GifExpertApp\n\n<>\n<h2>GifExpertApp</h2>\n</>\n"],"sourceRoot":""}