{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","console","log","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KA0B5C,OAGQ,sBAAMC,SAjBO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAWd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SA5BU,SAACP,GAIvBF,EAAcE,EAAEQ,OAAOF,a,+BCZjBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdC,EAFc,iDAEkCC,UAAUH,GAF5C,8DAIDI,MAAMF,GAJL,cAIdG,EAJc,gBAMCA,EAAKC,OANN,uBAMbC,EANa,EAMbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZtB,kBAgBbM,GAhBa,4CAAH,sDCCRO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OACI,sBAAKc,UAAU,4BAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAa,IAAD,EAEXd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAuBrC,OAhBAC,qBAAU,WAGFxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAMtB,CAACpB,IAIGqB,EDlBuBK,CAAa1B,GAA/Ba,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAMpB,OAJAO,QAAQC,IAAIR,GAKR,qCACA,oBAAIJ,UAAU,kBAAd,SAAiChB,IAEhCoB,GAAW,mBAAGJ,UAAU,iBAAb,sBACZ,qBAAKA,UAAU,YAAf,SAEWH,EAAOJ,KAAI,SAAAC,GAAG,OAEf,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEyBZkB,EA5CM,WAAM,IAAD,EAIc3C,mBAAS,CAAC,WAJxB,mBAIf4C,EAJe,KAIH7C,EAJG,KAgB1B,OAEI,qCAGA,+DAEA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEQ,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YC7B5B+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,SAM1B,a","file":"static/js/main.49fabad2.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        //console.log(e.target.value);\r\n\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n\r\n            setCategories(cats => [inputValue,...cats ]);\r\n            setInputValue(\"\");\r\n        }\r\n\r\n        //console.log(\"submit hecho\");\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n\r\n        \r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n            \r\n        \r\n            \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n};","\r\n export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=8&api_key=TYK4QpHPVVMsOqRYIwOePlI6sh1nhe4l`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n       return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    //console.log(gifs);\r\n\r\n    //setImages(gifs);\r\n\r\n    //resp.ok\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    //console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__fadeInUpBig\">\r\n           <img src={url} alt={title}/>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading}= useFetchGifs(category);\r\n\r\n    console.log(loading);\r\n\r\n     \r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__fadeIn\">{category}</h3>\r\n\r\n        {loading && <p className=\"animate__flash\">Cargando</p>}\r\n        <div className=\"card-grid\">  \r\n               {\r\n                   images.map(img => (\r\n\r\n                  <GifGridItem \r\n                  key={img.id}\r\n                  {...img}\r\n                  \r\n                  />\r\n                   )\r\n                   )\r\n               }\r\n              \r\n           \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        \r\n            getGifs(category).then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n     \r\n        \r\n\r\n    }, [category])\r\n\r\n  \r\n\r\n    return state; //{data:[], loading: true}\r\n\r\n\r\n}","import { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    \r\n\r\n    const [categories, setCategories] = useState([\"Naruto\"]);\r\n\r\n    /* const handleAdd = () => {\r\n\r\n        let anime= \"Re:Zero\";\r\n        setCategories(categories.concat(anime));\r\n        console.log(categories);\r\n\r\n        setCategories([...categories,anime]);\r\n\r\n        setCategories((e) => [...e, anime]); //la e es el estado anterior del estado\r\n    } */\r\nreturn(\r\n\r\n    <>\r\n\r\n    \r\n    <h2>soy un componente funcionando</h2>\r\n    \r\n    <AddCategory setCategories={setCategories}/>\r\n    <hr />\r\n    \r\n            <ol>\r\n                    {\r\n                    categories.map( category => (\r\n                       <GifGrid \r\n                       key={category}\r\n                       category={category}/>\r\n                    ))\r\n                    }\r\n            </ol>\r\n\r\n    </>\r\n\r\n)\r\n\r\n\r\n\r\n}\r\n\r\nexport default GifExpertApp ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp.js'\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n//GifExpertApp\n\n<>\n<h2>GifExpertApp</h2>\n</>\n"],"sourceRoot":""}